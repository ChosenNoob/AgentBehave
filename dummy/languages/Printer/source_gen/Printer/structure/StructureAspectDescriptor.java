package Printer.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptPrintStatement = createDescriptorForPrintStatement();
  /*package*/ final ConceptDescriptor myConceptPrinter = createDescriptorForPrinter();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptPrintStatement, myConceptPrinter);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.PrintStatement:
        return myConceptPrintStatement;
      case LanguageConceptSwitch.Printer:
        return myConceptPrinter;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList();
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForPrintStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Printer", "PrintStatement", 0x614ae6dc3f27404cL, 0xb39421bcf98b0265L, 0x1e4617db4b1cea5eL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:dad2fe36-646e-4b7d-bf4a-6ae0476b0051(Printer.structure)/2181457300133046878");
    b.version(2);
    b.property("data", 0x1e4617db4b1cea63L).type(PrimitiveTypeId.STRING).origin("2181457300133046883").done();
    b.alias("print");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPrinter() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Printer", "Printer", 0x614ae6dc3f27404cL, 0xb39421bcf98b0265L, 0x1e4617db4b1c6222L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.parent(0x4caf0310491e41f5L, 0x8a9b2006b3a94898L, 0x40c1a7cb987d20d5L);
    b.origin("r:dad2fe36-646e-4b7d-bf4a-6ae0476b0051(Printer.structure)/2181457300133012002");
    b.version(2);
    b.aggregate("prints", 0x1e4617db4b1ceb2bL).target(0x614ae6dc3f27404cL, 0xb39421bcf98b0265L, 0x1e4617db4b1cea5eL).optional(true).ordered(true).multiple(true).origin("2181457300133047083").done();
    return b.create();
  }
}
